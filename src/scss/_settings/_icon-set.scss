// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-download-name: 'icon-download';
$icon-download-x: 50px;
$icon-download-y: 37px;
$icon-download-offset-x: -50px;
$icon-download-offset-y: -37px;
$icon-download-width: 16px;
$icon-download-height: 16px;
$icon-download-total-width: 88px;
$icon-download-total-height: 62px;
$icon-download-image: '../img/icon-set.png';
$icon-download: (50px, 37px, -50px, -37px, 16px, 16px, 88px, 62px, '../img/icon-set.png', 'icon-download', );
$icon-en-name: 'icon-en';
$icon-en-x: 70px;
$icon-en-y: 0px;
$icon-en-offset-x: -70px;
$icon-en-offset-y: 0px;
$icon-en-width: 18px;
$icon-en-height: 12px;
$icon-en-total-width: 88px;
$icon-en-total-height: 62px;
$icon-en-image: '../img/icon-set.png';
$icon-en: (70px, 0px, -70px, 0px, 18px, 12px, 88px, 62px, '../img/icon-set.png', 'icon-en', );
$icon-languge-name: 'icon-languge';
$icon-languge-x: 50px;
$icon-languge-y: 20px;
$icon-languge-offset-x: -50px;
$icon-languge-offset-y: -20px;
$icon-languge-width: 17px;
$icon-languge-height: 17px;
$icon-languge-total-width: 88px;
$icon-languge-total-height: 62px;
$icon-languge-image: '../img/icon-set.png';
$icon-languge: (50px, 20px, -50px, -20px, 17px, 17px, 88px, 62px, '../img/icon-set.png', 'icon-languge', );
$icon-marker1-name: 'icon-marker1';
$icon-marker1-x: 70px;
$icon-marker1-y: 24px;
$icon-marker1-offset-x: -70px;
$icon-marker1-offset-y: -24px;
$icon-marker1-width: 9px;
$icon-marker1-height: 9px;
$icon-marker1-total-width: 88px;
$icon-marker1-total-height: 62px;
$icon-marker1-image: '../img/icon-set.png';
$icon-marker1: (70px, 24px, -70px, -24px, 9px, 9px, 88px, 62px, '../img/icon-set.png', 'icon-marker1', );
$icon-ru-name: 'icon-ru';
$icon-ru-x: 70px;
$icon-ru-y: 12px;
$icon-ru-offset-x: -70px;
$icon-ru-offset-y: -12px;
$icon-ru-width: 18px;
$icon-ru-height: 12px;
$icon-ru-total-width: 88px;
$icon-ru-total-height: 62px;
$icon-ru-image: '../img/icon-set.png';
$icon-ru: (70px, 12px, -70px, -12px, 18px, 12px, 88px, 62px, '../img/icon-set.png', 'icon-ru', );
$icon-save-name: 'icon-save';
$icon-save-x: 50px;
$icon-save-y: 0px;
$icon-save-offset-x: -50px;
$icon-save-offset-y: 0px;
$icon-save-width: 20px;
$icon-save-height: 20px;
$icon-save-total-width: 88px;
$icon-save-total-height: 62px;
$icon-save-image: '../img/icon-set.png';
$icon-save: (50px, 0px, -50px, 0px, 20px, 20px, 88px, 62px, '../img/icon-set.png', 'icon-save', );
$icon-slider-left-name: 'icon-slider-left';
$icon-slider-left-x: 0px;
$icon-slider-left-y: 0px;
$icon-slider-left-offset-x: 0px;
$icon-slider-left-offset-y: 0px;
$icon-slider-left-width: 25px;
$icon-slider-left-height: 62px;
$icon-slider-left-total-width: 88px;
$icon-slider-left-total-height: 62px;
$icon-slider-left-image: '../img/icon-set.png';
$icon-slider-left: (0px, 0px, 0px, 0px, 25px, 62px, 88px, 62px, '../img/icon-set.png', 'icon-slider-left', );
$icon-slider-right-name: 'icon-slider-right';
$icon-slider-right-x: 25px;
$icon-slider-right-y: 0px;
$icon-slider-right-offset-x: -25px;
$icon-slider-right-offset-y: 0px;
$icon-slider-right-width: 25px;
$icon-slider-right-height: 62px;
$icon-slider-right-total-width: 88px;
$icon-slider-right-total-height: 62px;
$icon-slider-right-image: '../img/icon-set.png';
$icon-slider-right: (25px, 0px, -25px, 0px, 25px, 62px, 88px, 62px, '../img/icon-set.png', 'icon-slider-right', );
$spritesheet-width: 88px;
$spritesheet-height: 62px;
$spritesheet-image: '../img/icon-set.png';
$spritesheet-sprites: ($icon-download, $icon-en, $icon-languge, $icon-marker1, $icon-ru, $icon-save, $icon-slider-left, $icon-slider-right, );
$spritesheet: (88px, 62px, '../img/icon-set.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
